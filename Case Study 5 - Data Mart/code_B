-- this code is written in postgresql in the dbfiddle editor linked on the challenge page

--1. what day of the week is used for each week_date value?
select distinct to_char(clean_week_date, 'Day') as DAY_NAME, count(to_char(clean_week_date, 'Day')) as COUNT
from clean_weekly_sales
group by DAY_NAME order by COUNT desc

--2. What range of week numbers are missing from the dataset?
select distinct week_number from clean_weekly_sales order by week_number;
--weeks 1-31, 37-52 are missing.

--3. How many total transactions were there for each year in the dataset?
select 
distinct calendar_year, 
sum(transactions) 
from clean_weekly_sales 
group by calendar_year;
--my code must be off as all the years are counted as 2020. hmm.

--4. What is the total sales for each region for each month?
select
calendar_year,
month_number,
region,
sum(sales)
from clean_weekly_sales
group by calendar_year,month_number, region;

--5. What is the total count of transactions for each platform
select
platform,
sum(transactions)
from clean_weekly_sales group by platform;

--6. What is the percentage of sales for Retail vs Shopify for each month?
select
calendar_year,
month_number,
platform,
sum(sales) over (PARTITION BY month_number,calendar_year,platform order by platform  ) as sale_monthly,
        100 * CAST(sum(sales) over (PARTITION BY month_number,calendar_year,platform order by platform  ) AS FLOAT)  
            /  (sum(sales) over (PARTITION BY calendar_year,platform order by platform  )) AS Percent_sales_monthly
            
from clean_weekly_sales
group by calendar_year, month_number, platform;
--I'm struggling getting the 'partition by' in this code to work. I need to revisit this.

--7. What is the percentage of sales by demographic for each year in the dataset?
--will use a similar partition by clause, I will revisit this.


