--postgresql. written using query SQL function on db-fiddle, linked on original challenge page
--What is the unique count and total amount for each transaction type
select distinct(txn_type),
	count(customer_id) unique_count,
	sum(txn_amount) total_amount
from customer_transactions
group by txn_type
order by unique_count asc;

--What is the average total historical deposit counts and amounts for all customers?
select txn_type,
	count(txn_amount) as count,
    round(avg(txn_amount),2) as amount
from customer_transactions
where txn_type = 'deposit'
group by txn_type

--For each month - how many Data Bank customers make more than 1 deposit and either 1 purchase or 1 withdrawal in a single month?--NB my solution includes excluding some results, interpreting the question as '>1 deposit, 1 purchase, 0 withdrawal', OR '>1 deposit, 0 purchase, 1 withdrawal'
with trans_type_counts as 
	(select customer_id,
     	extract(month from txn_date) as month,--no need to do year as this dataset includes only 2020
     	count(case when txn_type = 'deposit' then 1 end) as deposit_count,
     	count(case when txn_type = 'withdrawal' then 1 end) as withdrawal_count,
     	count(case when txn_type = 'purchase' then 1 end) as purchase_count
     from customer_transactions
     group by customer_id, month
     )
select count(customer_id) as count_customer,
	month
from trans_type_counts 

where 
	(deposit_count > 1 and withdrawal_count = 1 and purchase_count = 0) 
    or (deposit_count > 1 and purchase_count = 1 and withdrawal_count = 0)
group by month

--What is the closing balance for each customer at the end of the month?
with eom_balance as
	(
    select customer_id,
      	extract(month from txn_date) as month,
      	sum(case when txn_type = 'deposit' then txn_amount
            else - txn_amount end) as tptal_amount
      from customer_transactions
      group by customer_id, month
      order by customer_id, month
    )
select customer_id, month, sum(tptal_amount) over (partition by customer_id order by month rows between unbounded preceding and current row) as cumulative_amount from eom_balance
limit 10

--What is the percentage of customers who increase their closing balance by more than 5%?
---to answer, use third column of previous table and calculate percentage changes between rows, grouped by customer ID
with eom_balance as
	(
    select customer_id,
      	extract(month from txn_date) as month,
      	sum(case when txn_type = 'deposit' then txn_amount
            else - txn_amount end) as tptal_amount_between_months,
      	
      from customer_transactions
      group by customer_id, month
      order by customer_id, month
    )
select customer_id,
	sum(tptal_amount_between_months) over (order by customer_id rows between unbounded preceding and current row)) as running_total 
    from eom_balance
limit 10

--select cast(100.0 * count(distinct(customer_id) / (select count(distinct(customer_id) from customer_transactions) as float) from eom_balance
